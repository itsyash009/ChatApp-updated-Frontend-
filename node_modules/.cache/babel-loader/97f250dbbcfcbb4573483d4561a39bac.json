{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport Infobar from '../Infobar/Infobar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const endpoint = \"localhost:3000\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(endpoint); //console.log(name,room);\n\n    setName(name);\n    setRoom(room);\n    console.log(socket);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [endpoint, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessages(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Infobar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M7DGl/NqV6luCY8IpJPKHYFo+ZU=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/yash/Desktop/ChatApp/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Infobar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","endpoint","parse","search","console","log","emit","off","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React ,{useState, useEffect}from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css'\r\nimport Infobar from '../Infobar/Infobar'\r\nimport Input from '../Input/Input'\r\nimport Messages from '../Messages/Messages'\r\n\r\nlet socket;\r\n\r\n\r\n const Chat = ({location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const endpoint=\"localhost:3000\";\r\n    useEffect(()=>{\r\n        const {name,room}=queryString.parse(location.search);\r\n         \r\n\r\n            socket = io(endpoint);\r\n\r\n\r\n\r\n            //console.log(name,room);\r\n            setName(name);\r\n            setRoom(room);\r\n            console.log(socket);\r\n\r\n\r\n\r\n            socket.emit('join', {name,room} ,() =>{\r\n                    \r\n            });\r\n\r\n          \r\n            return() =>{\r\n                socket.emit('disconnect');\r\n\r\n                socket.off();\r\n            }\r\n            },[endpoint, location.search]);\r\n\r\n            useEffect(()=>{\r\n                socket.on('message', (message)=>{\r\n\r\n                    setMessages([...messages,message]);\r\n\r\n            })\r\n        },[messages]);\r\n\r\n\r\n\r\n\r\n    const sendMessage =(event) =>{\r\n\r\n        event.preventDefault();\r\n\r\n        if(message)\r\n        {\r\n        socket.emit('sendMessage', message ,()=> setMessages(''))\r\n    }\r\n}\r\n    console.log(message, messages);\r\n    return(\r\n        <div className=\"outerContainer\">\r\n           <div className=\"container\">\r\n            <Infobar room={room}/>\r\n\r\n            <Messages messages={messages} name={name}/>\r\n\r\n            <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n            {/* <input value={message} onChange={(event) =>setMessage(event.target.value)} onKeyPress={event =>event.key==='Enter' ? sendMessage(event): null} /> */}\r\n\r\n           </div>\r\n        </div>\r\n    \r\n    );\r\n    }\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}